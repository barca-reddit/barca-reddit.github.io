---
import IconArrowUp from '../assets/icons/arrow-up.svg';
import type { UpdateEntry } from '../util/transformers.ts';

interface Props {
    updateList: UpdateEntry[];
    type: 'Promotions' | 'Demotions' | 'Additions' | 'Removals';
}

function iconClass(type: string): string {
    switch (type) {
        case 'Additions':
            return 'rotate-45';
        case 'Removals':
            return 'rotate-[135deg]';
        case 'Promotions':
            return '';
        case 'Demotions':
            return 'rotate-180';
        default:
            return '';
    }
}

function changeText(change: UpdateEntry) {
    if (!change.nextTier) {
        return `removed from the guide`;
    }
    if (!change.prevTier) {
        return `added as tier ${change.nextTier}`;
    }
    return `moved from tier ${change.prevTier} to tier ${change.nextTier}`;
}

const { updateList, type }: Props = Astro.props;
---

<div class='mt-4 flex flex-col gap-4 first:mt-0'>
    <h3 class='text-xl font-medium tracking-tighter sm:text-2xl'>
        {type}
    </h3>
    <div class='grid grid-cols-2 gap-2 sm:grid-cols-[repeat(auto-fill,minmax(12rem,_1fr))]'>
        {
            updateList.map(change => (
                <div class='flex items-center gap-2'>
                    <IconArrowUp class={iconClass(type)} />
                    <div class='flex flex-col leading-none'>
                        <span class='text-base'>{change.sourceName}</span>
                        <span class='text-secondary text-sm tracking-tighter'>
                            {changeText(change)}
                        </span>
                    </div>
                </div>
            ))
        }
    </div>
</div>
